<?xml version="1.0"?>
<doc>
<assembly>
<name>
SZHomeDLL
</name>
</assembly>
<members>
<member name="P:SZHomeDLL.My.Resources.Resources.ResourceManager">
	<summary>
  返回此类使用的缓存的 ResourceManager 实例。
</summary>
</member><member name="P:SZHomeDLL.My.Resources.Resources.Culture">
	<summary>
  使用此强类型资源类，为所有资源查找
  重写当前线程的 CurrentUICulture 属性。
</summary>
</member><member name="T:SZHomeDLL.My.Resources.Resources">
	<summary>
  一个强类型的资源类，用于查找本地化的字符串等。
</summary>
</member><member name="M:SZHomeDLL.HttpContextHelper.QueryStringInt(System.String)">
	<summary>
 取得页面参数值
 </summary>
	<param name="key">参数名</param>
	<returns>Integer</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.QueryString(System.String)">
	<summary>
 取得页面参数值
 </summary>
	<param name="key">参数名</param>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.SetCookie(System.String,System.String,System.DateTime)">
	<summary>
 根据key设置cookies值
 </summary>
	<param name="key">名称</param>
	<param name="value">值</param>
	<param name="expires">过期时间</param>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.GetCookie(System.String)">
	<summary>
 根据key获取cookies值
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.GetClientIP">
	<summary>
 获取客服端IP(穿过代理服务器取远程用户真实IP地址)
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.EnCodeQueryString(System.String)">
	<summary>
 用Base64方法加密整个URL地址参数。
 </summary>
	<param name="queryString"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.DecodeQueryString(System.String)">
	<summary>
 用Base64方法解密整个URL地址参数。
 </summary>
	<param name="queryString"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.GetQueryPropertiesBag">
	<summary>
 分析URl参数。
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.DeCodeQueryStringByKey(System.String)">
	<summary>
 将给定的key用Base64方法解密一个URL地址参数。
 </summary>
	<param name="key"></param>
	<returns>找不到，返回Nothing</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HttpContextHelper.ParmesValid(System.Collections.Generic.Dictionary{System.String,System.String})">
	<summary>
 参数打包过滤，将含SQL注入字符的参数忽略，返回无注入字符的新集合
 </summary>
	<param name="parmes"></param>
	<returns></returns>
</member><member name="M:SZHomeDLL.HttpContextHelper.ParmesFilter(System.Collections.Generic.Dictionary{System.String,System.String})">
	<summary>
 参数打包过滤，将参数中SQL注入字符直接替换为空，并添加到集合返回
 </summary>
	<param name="parmes"></param>
	<returns></returns>
</member><member name="T:SZHomeDLL.HttpContextHelper">
	<summary>
 HttpContext操作类，包括获取页面参数\Cookie设置与获取\IP获取\Url加密参数与获取\POST参数安全过滤等
 </summary>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.IsMobilePhone(System.String)">
	<summary>
 检查是否手机号码
 </summary>
	<param name="inputData"></param>
	<returns>是手机号码返回ture,否则返回false</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.IsNumber(System.String)">
	<summary>
 是否数字字符串
 </summary>
	<param name="inputData">输入字符串</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.IsNumberSign(System.String)">
	<summary>
 是否数字字符串 可带正负号
 </summary>
	<param name="inputData">输入字符串</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.IsDecimal(System.String)">
	<summary>
 是否是浮点数
 </summary>
	<param name="inputData">输入字符串</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.IsDecimalSign(System.String)">
	<summary>
 是否是浮点数 可带正负号
 </summary>
	<param name="inputData">输入字符串</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.IsHasCHZN(System.String)">
	<summary>
 检测是否有中文字符
 </summary>
	<param name="inputData"></param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.IsEmail(System.String)">
	<summary>
 是否为邮件地址
 </summary>
	<param name="inputData">输入字符串</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.SqlText(System.String,System.Int32)">
	<summary>
 检查字符串最大长度，返回指定长度的串
 </summary>
	<param name="sqlInput">输入字符串</param>
	<param name="maxLength">最大长度</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.HtmlEncode(System.String)">
	<summary>
 字符串编码
 </summary>
	<param name="inputData"></param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.Encode(System.String)">
	<summary>
 转换成 HTML code
 </summary>
	<param name="str">string</param>
	<returns>string</returns>
</member><member name="M:SZHomeDLL.StringHelper.Decode(System.String)">
	<summary>
解析html成 普通文本
 </summary>
	<param name="str">string</param>
	<returns>string</returns>
</member><member name="M:SZHomeDLL.StringHelper.SqlTextClear(System.String)">
	<summary>
 去除SQL的非法字符
 </summary>
	<param name="sqlText"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.GetStrList(System.String,System.Char,System.Boolean)">
	<summary>
 把字符串分割成数组
 </summary>
	<param name="str">要分割的字符串</param>
	<param name="speater">分格符</param>
	<param name="toLower">是否把分出后的数组都变成小写</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.GetStrArray(System.String,System.Char)">
	<summary>
 把带逗号字符串分割成数组
 </summary>
	<param name="str">要分割的字符串</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.GetArrayStr(System.String[],System.String)">
	<summary>
把String()数组变成字符串
 </summary>
	<param name="strArray"></param>
	<param name="speater"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.GetListStr(System.Collections.Generic.List{System.String},System.String)">
	<summary>
 把List(string)数组变成字符串
 </summary>
	<param name="list">字符串</param>
	<param name="speater">分割符</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.ToDelLastChar(System.String,System.Char)">
	<summary>
 删除字符串最后结尾的符号
 </summary>
	<param name="str">原始的字符串</param>
	<param name="speater">结尾符</param>
	<returns>返回处理后字符串</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.ToSub(System.Object,System.Int32,System.String)">
	<summary>
 截取字符串
 </summary>
	<param name="obj">字符对象</param>
	<param name="size">长度</param>
	<param name="strMore">替换大于长度的字符.如果不传这个参数,默认为...</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.ToReplace(System.String,System.String,System.String,System.String)">
	<summary> 
 替换字符串内容（只匹配替换一次）,如果开始结束字符串不能匹配到，则返回原始字符串
 </summary>
	<param name="strPending">原始字符串</param>
	<param name="flagBegin">需替换内容开始字符串</param>
	<param name="flagEnd">需替换内容结束字符串</param>
	<param name="ReplaceString">目标字符串</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.IsIncludeSqlInjection(System.String)">
	<summary>
 检验输入的字符串有没有可能包含SQL注入。 "'|%|exec |;|--|\/\*|\*\/" 
 </summary>
	<param name="input">要检验的字符串</param>
	<returns>返回真表示有可能注入的关键字。</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.ConvertUBBToDB(System.String)">
	<summary>
 编辑文本框内容转化成为数据库保存格式
 </summary>
	<param name="ubbString"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.ConvertDBToUBB(System.String)">
	<summary>
 数据库保存的内容转化成为编辑文本框内容(编辑时用)
 </summary>
	<param name="dbString"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.StringHelper.ConvertChnToUnicode(System.String)">
	<summary>
 中文转Unicode
 </summary>
	<param name="str"></param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.ConvertUnicodeToChn(System.String)">
	<summary>
 Unicode转中文
 </summary>
	<param name="str">UniCode</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.StringHelper.ToUnicodeSub(System.String,System.Int32)">
	<summary>
 截取文字长度，用于带表情或生僻字的文本，先转成Unicode后截取再还原
 </summary>
	<param name="str">需截取的文本</param>
	<param name="length">截取长度</param>
	<returns></returns>
</member><member name="T:SZHomeDLL.StringHelper">
	<summary>
 字符操作类
 </summary>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.XMLHelper.XMLLoad">
	<summary>
 导入XML文件
 </summary>
</member><member name="M:SZHomeDLL.XMLHelper.XMLLoad(System.String)">
	<summary>
 导入XML文件
 </summary>
	<param name="strPath">XML文件路径</param>
</member><member name="M:SZHomeDLL.XMLHelper.GetXmlFullPath(System.String)">
	<summary>
 返回完整路径
 </summary>
	<param name="strPath">Xml的路径</param>
</member><member name="M:SZHomeDLL.XMLHelper.Read(System.String)">
	<summary>
 读取指定节点的数据
 </summary>
	<param name="node">节点</param>
 使用示列:
 XMLProsess.Read("/Node", "")
 XMLProsess.Read("/Node/Element[@Attribute='Name']")

</member><member name="M:SZHomeDLL.XMLHelper.Read(System.String,System.String)">
 使用示列:
 XMLProsess.Read(path, "/Node", "")
 XMLProsess.Read(path, "/Node/Element[@Attribute='Name']")
 <summary>
 读取指定路径和节点的串联值
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
</member><member name="M:SZHomeDLL.XMLHelper.Read(System.String,System.String,System.String)">
	<summary>
 读取指定路径和节点的属性值
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
	<param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
 使用示列:
 XMLProsess.Read(path, "/Node", "")
 XMLProsess.Read(path, "/Node/Element[@Attribute='Name']", "Attribute")

</member><member name="M:SZHomeDLL.XMLHelper.ReadAllChildallValue(System.String)">
	<summary>
 获取某一节点的所有孩子节点的值
 </summary>
	<param name="node">要查询的节点</param>
</member><member name="M:SZHomeDLL.XMLHelper.ReadAllChild(System.String)">
	<summary>
 获取某一节点的所有孩子节点的值
 </summary>
	<param name="node">要查询的节点</param>
</member><member name="M:SZHomeDLL.XMLHelper.GetDataViewByXml(System.String,System.String)">
	<summary> 
 读取XML返回经排序或筛选后的DataView
 </summary>
	<param name="strWhere">筛选条件，如:"name='kgdiwss'"</param>
	<param name="strSort"> 排序条件，如:"Id desc"</param>
</member><member name="M:SZHomeDLL.XMLHelper.GetDataSetByXml(System.String)">
	<summary>
 读取XML返回DataSet
 </summary>
	<param name="strXmlPath">XML文件相对路径</param>
</member><member name="M:SZHomeDLL.XMLHelper.Insert(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 插入数据
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
	<param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
	<param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
	<param name="value">值</param>
 使用示列:
 XMLProsess.Insert(path, "/Node", "Element", "", "Value")
 XMLProsess.Insert(path, "/Node", "Element", "Attribute", "Value")
 XMLProsess.Insert(path, "/Node", "", "Attribute", "Value")

</member><member name="M:SZHomeDLL.XMLHelper.Insert(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
	<summary>
 插入数据
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
	<param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
	<param name="kvdict">由XML属性名和值组成的字典类型</param>
</member><member name="M:SZHomeDLL.XMLHelper.WriteXmlByDataSet(System.String,System.String[],System.String[])">
	<summary>
 插入一行数据
 </summary>
	<param name="strXmlPath">XML文件相对路径</param>
	<param name="Columns">要插入行的列名数组，如：string[] Columns = {"name","IsMarried"};</param>
	<param name="ColumnValue">要插入行每列的值数组，如：string[] ColumnValue={"XML大全","false"};</param>
	<returns>成功返回true,否则返回false</returns>
</member><member name="M:SZHomeDLL.XMLHelper.Update(System.String,System.String)">
	<summary>
 修改指定节点的数据
 </summary>
	<param name="node">节点</param>
	<param name="value">值</param>
</member><member name="M:SZHomeDLL.XMLHelper.Update(System.String,System.String,System.String)">
	<summary>
 修改指定节点的数据
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
	<param name="value">值</param>
 使用示列:
 XMLProsess.Insert(path, "/Node","Value")
 XMLProsess.Insert(path, "/Node","Value")

</member><member name="M:SZHomeDLL.XMLHelper.Update(System.String,System.String,System.String,System.String)">
	<summary>
 修改指定节点的属性值(静态)
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
	<param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
	<param name="value">值</param>
 使用示列:
 XMLProsess.Insert(path, "/Node", "", "Value")
 XMLProsess.Insert(path, "/Node", "Attribute", "Value")

</member><member name="M:SZHomeDLL.XMLHelper.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
	<summary>
 更改符合条件的一条记录
 </summary>
	<param name="strXmlPath">XML文件路径</param>
	<param name="Columns">列名数组</param>
	<param name="ColumnValue">列值数组</param>
	<param name="strWhereColumnName">条件列名</param>
	<param name="strWhereColumnValue">条件列值</param>
</member><member name="M:SZHomeDLL.XMLHelper.Delete(System.String,System.String)">
	<summary>
 删除节点值
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
 使用示列:
 XMLProsess.Delete(path, "/Node", "")
 XMLProsess.Delete(path, "/Node", "Attribute")

</member><member name="M:SZHomeDLL.XMLHelper.Delete(System.String,System.String,System.String)">
	<summary>
 删除数据
 </summary>
	<param name="path">路径</param>
	<param name="node">节点</param>
	<param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
 使用示列:
 XMLProsess.Delete(path, "/Node", "")
 XMLProsess.Delete(path, "/Node", "Attribute")

</member><member name="M:SZHomeDLL.XMLHelper.DeleteXmlAllRows(System.String)">
	<summary>
 删除所有行
 </summary>
	<param name="strXmlPath">XML路径</param>
</member><member name="M:SZHomeDLL.XMLHelper.DeleteXmlRowByIndex(System.String,System.Int32)">
	<summary>
 通过删除DataSet中指定索引行，重写XML以实现删除指定行
 </summary>
	<param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
</member><member name="M:SZHomeDLL.XMLHelper.DeleteXmlRows(System.String,System.String,System.String[])">
	<summary>
 删除指定列中指定值的行
 </summary>
	<param name="strXmlPath">XML相对路径</param>
	<param name="strColumn">列名</param>
	<param name="ColumnValue">指定值</param>
</member><member name="T:SZHomeDLL.XMLHelper">
	<summary>
 XML操作类
 </summary>
	<remarks></remarks>
</member><member name="T:SZHomeDLL.ImageHelper.eLocation">
	<summary>
 上传水印位置枚举
 </summary>
	<remarks></remarks>
</member><member name="T:SZHomeDLL.ImageHelper.eWaterType">
	<summary>
 上传水印类型枚举
 </summary>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.ImageWatermark(System.String,System.String,SZHomeDLL.ImageHelper.eLocation)">
	<summary>
 图片水印处理方法
 </summary>
	<param name="imgpath">需要加载水印的图片路径（物理路径）</param>
	<param name="waterpath">水印图片（物理路径）</param>
	<param name="location">水印位置（传送正确的代码）</param>
</member><member name="M:SZHomeDLL.ImageHelper.GetLocation(SZHomeDLL.ImageHelper.eLocation,System.Drawing.Image,System.Drawing.Image)">
	<summary>
 图片水印位置处理方法
 </summary>
	<param name="location">水印位置</param>
	<param name="img">需要添加水印的图片</param>
	<param name="waterimg">水印图片</param>
</member><member name="M:SZHomeDLL.ImageHelper.LetterWatermark(System.String,System.Int32,System.String,System.String,System.String,SZHomeDLL.ImageHelper.eLocation)">
	<summary>
 文字水印处理方法
 </summary>
	<param name="imagePath">图片路径（物理路径）</param>
	<param name="size">字体大小</param>
	<param name="letter">水印文字</param>
	<param name="colorStr">颜色</param>
	<param name="location">水印位置</param>
</member><member name="M:SZHomeDLL.ImageHelper.GetLocation(SZHomeDLL.ImageHelper.eLocation,System.Drawing.Image,System.Int32,System.Int32)">
	<summary>
 文字水印位置的方法
 </summary>
	<param name="location">位置代码</param>
	<param name="img">图片对象</param>
	<param name="width">宽(当水印类型为文字时,传过来的就是字体的大小)</param>
	<param name="height">高(当水印类型为文字时,传过来的就是字符的长度)</param>
</member><member name="M:SZHomeDLL.ImageHelper.LDPic(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
	<summary>
 调整光暗
 </summary>
	<param name="mybm">原始图片</param>
	<param name="width">原始图片的长度</param>
	<param name="height">原始图片的高度</param>
	<param name="val">增加或减少的光暗值</param>
</member><member name="M:SZHomeDLL.ImageHelper.RePic(System.Drawing.Bitmap,System.Int32,System.Int32)">
	<summary>
 反色处理
 </summary>
	<param name="mybm">原始图片</param>
	<param name="width">原始图片的长度</param>
	<param name="height">原始图片的高度</param>
</member><member name="M:SZHomeDLL.ImageHelper.FD(System.Drawing.Bitmap,System.Int32,System.Int32)">
	<summary>
 浮雕处理
 </summary>
	<param name="oldBitmap">原始图片</param>
	<param name="Width">原始图片的长度</param>
	<param name="Height">原始图片的高度</param>
</member><member name="M:SZHomeDLL.ImageHelper.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
	<summary>
 拉伸图片
 </summary>
	<param name="bmp">原始图片</param>
	<param name="newW">新的宽度</param>
	<param name="newH">新的高度</param>
</member><member name="M:SZHomeDLL.ImageHelper.FilPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
	<summary>
 滤色处理
 </summary>
	<param name="mybm">原始图片</param>
	<param name="width">原始图片的长度</param>
	<param name="height">原始图片的高度</param>
</member><member name="M:SZHomeDLL.ImageHelper.RevPicLR(System.Drawing.Bitmap)">
	<summary>
 左右翻转
 </summary>
	<param name="mybm">原始图片</param>
</member><member name="M:SZHomeDLL.ImageHelper.RevPicUD(System.Drawing.Bitmap)">
	<summary>
 上下翻转
 </summary>
	<param name="mybm">原始图片</param>
</member><member name="M:SZHomeDLL.ImageHelper.Compress(System.String,System.String)">
	<summary>
 压缩到指定尺寸
 </summary>
	<param name="oldfile">原文件</param>
	<param name="newfile">新文件</param>
</member><member name="M:SZHomeDLL.ImageHelper.BWPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
	<summary>
 转换为黑白图片
 </summary>
	<param name="mybm">要进行处理的图片</param>
	<param name="width">图片的长度</param>
	<param name="height">图片的高度</param>
</member><member name="M:SZHomeDLL.ImageHelper.GetFrames(System.String,System.String)">
	<summary>
 获取图片中的各帧
 </summary>
	<param name="pPath">图片路径</param>
	<param name="pSavedPath">保存路径</param>
</member><member name="M:SZHomeDLL.ImageHelper.UploadImage(System.Byte[],System.String,System.Int32,System.Int32,System.String@,System.String)">
	<summary>
 上传图片方法，指定高宽
 0：上传失败； -1：上传出现异常错误；1：成功
 </summary>
	<param name="mBytes">上传图片的二进制字节流</param>
	<param name="fullPath">上传的物理路径，带文件名</param>
	<param name="imgwidth">指定图片的宽度</param>
	<param name="imgheight">指定图片的高度</param>
	<param name="mode">生成模式,HW:直接生成，会变形.W：指定宽，高按比例。H:指定高，宽按比例。A:智能选择比例（一般用这个）。CUT：直接能图片中心切图，不变形</param>
	<param name="OutMessage">返回的信息</param>
	<returns>0：上传失败； -1：上传出现异常错误；1：成功</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.UploadImage(System.Byte[],System.String,System.String@)">
	<summary>
 上传图片方法（不做任何处理）
 0：上传失败； -1：上传出现异常错误；1：成功
 </summary>
	<param name="mBytes">上传图片的二进制字节流</param>
	<param name="fullPath">上传的物理路径，带文件名</param>
	<param name="OutMessage">返回的信息</param>
	<returns>0：上传失败； -1：上传出现异常错误；1：成功</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.UploadImage(System.Web.HttpPostedFile,System.String,System.String@)">
	<summary>
 上传图片方法（不做任何处理）
 0：上传失败； -1：上传出现异常错误；1：成功
 </summary>
	<param name="file">上传图片文件流</param>
	<param name="fullPath">上传的物理路径，带文件名</param>
	<param name="OutMessage">返回的信息</param>
	<returns>0：上传失败； -1：上传出现异常错误；1：成功</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.UploadImage(System.Web.HttpPostedFile,System.String,System.Int32,System.Int32,System.String@,System.String)">
	<summary>
 上传图片方法，指定高宽
 0：上传失败； -1：上传出现异常错误；1：成功
 </summary>
	<param name="file">上传图片文件流</param>
	<param name="fullPath">上传的物理路径，带文件名</param>
	<param name="imgwidth">指定图片的宽度</param>
	<param name="imgheight">指定图片的高度</param>
	<param name="mode">生成模式,HW:直接生成，会变形.W：指定宽，高按比例。H:指定高，宽按比例。A:智能选择比例（一般用这个）。CUT：直接能图片中心切图，不变形</param>
	<param name="OutMessage">返回的信息</param>
	<returns>0：上传失败； -1：上传出现异常错误；1：成功</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.GenerateThumbnail(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32@,System.Int32@,SZHomeDLL.ImageHelper.eWaterType,SZHomeDLL.ImageHelper.eLocation)">
	<summary>
 生成小图
 </summary>
	<param name="originalImagePath">原图物理路径，带文件名</param>
	<param name="thumbnailPath">生成图的物理路径，带文件名</param>
	<param name="width">生成的宽</param>
	<param name="height">生成的高</param>
	<param name="mode">生成模式,HW:直接生成，会变形.W：指定宽，高按比例。H:指定高，宽按比例。A:智能选择比例（一般用这个）。CUT：直接能图片中心切图，不变形</param>
	<param name="ThumbnailWidth">返回生成缩略图的宽</param>
	<param name="ThumbnailHeight">返回生成缩略图的高</param>
	<param name="waterType">上传水印类型枚举</param>
	<param name="waterLocation">上传水印位置枚举</param>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.GenerateThumbnail(System.String,System.String,System.Int32,System.Int32,System.String,SZHomeDLL.ImageHelper.eWaterType,SZHomeDLL.ImageHelper.eLocation)">
	<summary>
 生成小图
 </summary>
	<param name="originalImagePath">原图物理路径，带文件名</param>
	<param name="thumbnailPath">生成图的物理路径，带文件名</param>
	<param name="width">生成的宽</param>
	<param name="height">生成的高</param>
	<param name="mode">生成模式,HW:直接生成，会变形.W：指定宽，高按比例。H:指定高，宽按比例。A:智能选择比例（一般用这个）。CUT：直接能图片中心切图，不变形</param>
	<param name="waterType">上传水印类型枚举</param>
	<param name="waterLocation">上传水印位置枚举</param>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.GenerateNewFileName">
	<summary>
 生成一个文件名，包含时间文件夹，格式如：2011/01/1615211429999
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ImageHelper.IsPermitToUpload(System.Byte[],System.String@)">
	<summary>  
 判断文件是否符合上传条件 （包括验证图片类型、图片大小）
 (注格式：JPG,GIF,BMP,PNG),GIF图片限制大小  
 </summary>
	<returns></returns>
</member><member name="T:SZHomeDLL.ImageHelper">
	<summary>
 图片操作类
 </summary>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ConvertHelper.StringToInt(System.String)">
	<summary>
 String转Integer
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ConvertHelper.StringToDateTime(System.String)">
	<summary>
 String转DateTime
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ConvertHelper.DecimalToRMB(System.Decimal)">
	<summary> 
 转换人民币大小金额 
 </summary>
	<param name="value">金额</param>
	<returns>返回大写形式</returns>
</member><member name="M:SZHomeDLL.ConvertHelper.StringToRMB(System.String)">
	<summary> 
 一个重载，将字符串先转换成数字在调用CmycurD(decimal num) 
 </summary>
	<param name="numstr">用户输入的金额，字符串形式未转成decimal</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.ConvertHelper.StringToDBC(System.String)">
	<summary>
  转半角的函数(SBC case)
 </summary>
	<param name="input">输入</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.ConvertHelper.StringToSBC(System.String)">
	<summary>
 转全角
 </summary>
	<param name="input"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ConvertHelper.BitmapToBytes(System.Drawing.Bitmap)">
	<summary>
 Bitmap转Bytes
 </summary>
	<param name="Bitmap"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.ConvertHelper.HttpPostedFileToBytes(System.Web.HttpPostedFile)">
	<summary>
 HttpPostedFile转Bytes
 </summary>
	<param name="file"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:SZHomeDLL.ConvertHelper">
	<summary>
 类型转换类
 </summary>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.CryptoHelper.EncryptDES(System.String)">
	<summary>  
 DES加密
 </summary>
	<param name="strSource">需要加密的字符串</param>
	<returns>以Base64格式返回的加密字符串</returns>
</member><member name="M:SZHomeDLL.CryptoHelper.DecryptDES(System.String)">
	<summary>  
  DES解密  
 </summary>
	<param name="strSource">需要解密的字符串</param>
	<returns>MD5解密后的字符串</returns>
</member><member name="M:SZHomeDLL.CryptoHelper.EncryptDESSafeUrl(System.String)">
	<summary>  
 DES加密（可以进行安全url传参） 
 </summary>
	<param name="strSource">需要加密的字符串</param>
	<returns>以Base64格式返回的加密字符串</returns>
</member><member name="M:SZHomeDLL.CryptoHelper.DecryptDESSafeUrl(System.String)">
	<summary>  
  DES解密（可以进行安全url传参） 
 </summary>
	<param name="strSource">需要解密的字符串</param>
	<returns>解密后的字符串</returns>
</member><member name="M:SZHomeDLL.CryptoHelper.EncryptMD5(System.String)">
	<summary>
 默认32位MD5加密方法
 </summary>
	<param name="strSource">待加密字串</param>
	<returns>加密后的字串</returns>
</member><member name="M:SZHomeDLL.CryptoHelper.EncryptMD5(System.String,System.Int32)">
	<summary>
 MD5加密
 </summary>
	<param name="strSource">待加密字串</param>
	<param name="length">16或32值之一,其它则采用.net默认MD5加密算法</param>
	<returns>加密后的字串</returns>
</member><member name="M:SZHomeDLL.CryptoHelper.EncryptAES256(System.String,System.String,System.String)">
	<summary>
 使用AES 256 加密
 </summary>
	<param name="source">本文</param>
	<param name="key">因為是256 所以你密碼必須為32英文字=32*8=256</param>
	<param name="iv">IV為128 所以為 16 * 8= 128</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.CryptoHelper.DecryptAES256(System.String,System.String,System.String)">
	<summary>
 使用AES 256 解密
 </summary>
	<param name="encryptData">Base64的加密後的字串</param>
	<param name="key">因為是256 所以你密碼必須為32英文字=32*8=256</param>
	<param name="iv">IV為128 所以為 16 * 8= 128</param>
	<returns></returns>
</member><member name="T:SZHomeDLL.CryptoHelper">
	<summary>
 加解密算法类，包括DES及MD5等
 </summary>
</member><member name="T:SZHomeDLL.FileHelper.eFileExtension">
	<summary>
 上传文件类型枚举
 </summary>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.IsExtension(System.Byte[],SZHomeDLL.FileHelper.eFileExtension[],SZHomeDLL.FileHelper.eFileExtension@)">
	<summary>
 验证上传文件后缀.
 </summary>
	<param name="imgArray">二进制</param>
	<param name="fileEx">枚举数组</param>
	<param name="enum_Extension">当前文件格式- 枚举</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.GetExtension(System.String)">
	<summary>
 根据文件名获取文件格式
 </summary>
	<param name="filename">文件名</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.CreateFile(System.String,System.String)">
	<summary>
 创建文件
 </summary>
	<param name="filename">文件名</param>
	<param name="path">路径</param>
	<returns>返回boolean，是否创建成功</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.CreateFile(System.String,System.String,System.Byte[])">
	<summary>
 创建文件
 </summary>
	<param name="filename">文件名</param>
	<param name="path">路径</param>
	<param name="contents">文件内容</param>
	<returns>返回boolean，是否创建成功</returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.OpenText(System.String)">
	<summary>
 读取文件
 </summary>
	<param name="parentName">文件路径及文件名</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.WriteAllText(System.String,System.String)">
	<summary>
 写入一个新文件，在文件中写入内容，然后关闭文件。如果目标文件已存在，则改写该文件。 
 </summary>
	<param name="parentName">文件路径</param>
	<param name="contents">内容</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.DeleteFile(System.String)">
	<summary>
 删除文件
 </summary>
	<param name="path">文件路径</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.MoveFile(System.String,System.String)">
	<summary>
 移动文件
 </summary>
	<param name="oldPath">旧文件路径</param>
	<param name="newPath">新文件路径</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.CreateFolder(System.String,System.String)">
	<summary>
 创建文件夹
 </summary>
	<param name="name">文件夹名称</param>
	<param name="parentName">文件夹父目录</param>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.DeleteFolder(System.String)">
	<summary>
 删除文件夹
 </summary>
	<param name="path">文件路径</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.MoveFolder(System.String,System.String)">
	<summary>
 移动文件夹
 </summary>
	<param name="oldPath">源路径</param>
	<param name="newPath">目标路径</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.FileHelper.CopyFolder(System.String,System.String)">
	<summary>
 复制文件夹
 </summary>
	<param name="source">源路径</param>
	<param name="destination">目标路径</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:SZHomeDLL.FileHelper">
	<summary>
 文件操作类
 </summary>
</member><member name="M:SZHomeDLL.ScriptHelper.Alert(System.Web.UI.Page,System.String)">
	<summary>
 显示消息提示对话框
 </summary>
	<param name="page">当前页面指针，一般为Me.Page</param>
	<param name="msg">提示信息</param>
</member><member name="M:SZHomeDLL.ScriptHelper.AlertConfirm(System.Web.UI.WebControls.WebControl,System.String)">
	<summary>
 控件点击 消息确认提示框
 </summary>
	<param name="msg">提示信息</param>
</member><member name="M:SZHomeDLL.ScriptHelper.AlertAndRedirect(System.Web.UI.Page,System.String,System.String)">
	<summary>
 显示消息提示对话框，并当前页面跳转
 </summary>
	<param name="page">当前页面指针，一般为Me.Page</param>
	<param name="msg">提示信息</param>
	<param name="url">跳转的目标URL</param>
</member><member name="M:SZHomeDLL.ScriptHelper.AlertAndRedirects(System.Web.UI.Page,System.String,System.String)">
	<summary>
 显示消息提示对话框，并进行父页面跳转top.location
 </summary>
	<param name="page">当前页面指针，一般为Me.Page</param>
	<param name="msg">提示信息</param>
	<param name="url">跳转的目标URL</param>
</member><member name="M:SZHomeDLL.ScriptHelper.AlertAndClose(System.Web.UI.Page,System.String)">
	<summary>
 显示消息提示对话框，并关闭当前页面
 </summary>
	<param name="page">当前页面指针，一般为Me.Page</param>
	<param name="msg">提示信息</param>
</member><member name="M:SZHomeDLL.ScriptHelper.ResponseScript(System.Web.UI.Page,System.String)">
	<summary>
 输出自定义脚本信息
 </summary>
	<param name="page">当前页面指针，一般为Me.Page</param>
	<param name="script">输出脚本</param>
</member><member name="T:SZHomeDLL.ScriptHelper">
	<summary>
 Script提示操作类
 </summary>
</member><member name="M:SZHomeDLL.ConfigHelper.GetConnectionString(System.String)">
	<summary>
 得到web.config里配置项的数据库连接字符串。
 </summary>
	<param name="key"></param>
	<returns></returns>
</member><member name="M:SZHomeDLL.ConfigHelper.GetConfigString(System.String)">
	<summary>
 得到web.config中AppSettings配置的字符串信息
 </summary>
	<param name="key"></param>
	<returns></returns>
</member><member name="T:SZHomeDLL.ConfigHelper">
	<summary>
 web.config操作类
 </summary>
</member><member name="P:SZHomeDLL.HTMLHelper.CookieContainer">
	<summary> 
 Cookie
 </summary>
</member><member name="P:SZHomeDLL.HTMLHelper.Encoding">
	<summary> 
 编码
 </summary>
</member><member name="P:SZHomeDLL.HTMLHelper.NetworkDelay">
	<summary> 
 网络延时
 </summary>
</member><member name="P:SZHomeDLL.HTMLHelper.MaxTry">
	<summary> 
 最大重试次数
 </summary>
</member><member name="M:SZHomeDLL.HTMLHelper.GetHtml(System.String,System.String,System.Boolean,System.Net.CookieContainer)">
	<summary>
 获取HTML
 </summary>
	<param name="url">地址</param>
	<param name="postData">post 提交的字符串</param>
	<param name="isPost">是否是post</param>
	<param name="cookieContainer">CookieContainer</param>
</member><member name="M:SZHomeDLL.HTMLHelper.GetHtml(System.String,System.Net.CookieContainer)">
	<summary>
 获取HTML
 </summary>
	<param name="url">地址</param>
	<param name="cookieContainer">CookieContainer</param>
</member><member name="M:SZHomeDLL.HTMLHelper.GetPathHTML(System.String,System.String)">
	<summary>
 获取HTML文件的HTML内容
 </summary>
	<param name="path">虚拟路径</param>
	<param name="coding">编码方式,如果gb2312</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SZHomeDLL.HTMLHelper.WriteHtmlFile(System.String,System.String)">
	<summary>
 写入HTML文件
 </summary>
	<param name="strHTML">HTML代码</param>
	<param name="htmlfilename">虚拟路径带文件名</param>
	<returns></returns>
</member><member name="M:SZHomeDLL.HTMLHelper.GetStream(System.String,System.Net.CookieContainer)">
	<summary>
 获取字符流
 </summary>
	<param name="url">地址</param>
	<param name="cookieContainer">cookieContainer</param>
</member><member name="M:SZHomeDLL.HTMLHelper.NoHTML(System.String)">
	<summary>   
清除HTML标记   
</summary>
	<param name="Htmlstring">包括HTML的源码</param>
	<returns>已经去除后的文字</returns>
</member><member name="M:SZHomeDLL.HTMLHelper.GetHref(System.String)">
	<summary>
 获取页面的链接正则
 </summary>
</member><member name="M:SZHomeDLL.HTMLHelper.GetImgSrc(System.String,System.String)">
	<summary>
 匹配页面的图片地址
 </summary>
	<param name="imgHttp">要补充的http://路径信息</param>
</member><member name="M:SZHomeDLL.HTMLHelper.GetImg(System.String,System.String)">
	<summary>
 匹配<img src=""/>中的图片路径实际链接
 </summary>
	<param name="ImgString"><img src=""/>字符串</param>
</member><member name="M:SZHomeDLL.HTMLHelper.Get_Http(System.String)">
	<summary>
 以GET方式抓取远程页面内容
 </summary>
</member><member name="M:SZHomeDLL.HTMLHelper.Post_Http(System.String,System.String,System.String)">
	<summary>
 以POST方式抓取远程页面内容
 </summary>
	<param name="postData">参数列表</param>
</member><member name="M:SZHomeDLL.HTMLHelper.ZipHtml(System.String)">
	<summary>
 压缩HTML输出
 </summary>
</member><member name="M:SZHomeDLL.HTMLHelper.DelHtml(System.String,System.String)">
	<summary>
 过滤指定HTML标签
 </summary>
	<param name="s_TextStr">要过滤的字符</param>
	<param name="html_Str">a img p div</param>
</member><member name="M:SZHomeDLL.HTMLHelper.File(System.String,System.Web.UI.Page)">
	<summary>
 加载文件块
 </summary>
</member><member name="M:SZHomeDLL.HTMLHelper.CSS(System.String,System.Web.UI.Page)">
	<summary>
 加载CSS样式文件
 </summary>
</member><member name="M:SZHomeDLL.HTMLHelper.JS(System.String,System.Web.UI.Page)">
	<summary>
 加载javascript脚本文件
 </summary>
</member><member name="T:SZHomeDLL.HTMLHelper">
	<summary>
 HTML操作类
 </summary>
</member>
</members>
</doc>